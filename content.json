{"meta":{"title":"BuGMaker' Bruce Ouyang","subtitle":null,"description":null,"author":"Bruce Ouyang","url":"http://bruce.bugmakers.club"},"pages":[{"title":"关于","date":"2018-04-19T06:13:36.000Z","updated":"2018-04-19T14:16:42.162Z","comments":true,"path":"about/index.html","permalink":"http://bruce.bugmakers.club/about/index.html","excerpt":"","text":"BuGMakersClub希望有想法的小伙伴们可以集结在一起，让所做的事情变得更有价值。 如果你对 BuGMakersClub 感兴趣，可以加我们的QQ群 111915819。 我我叫布鲁斯(Bruce)，一个简单的程序员。 Head Of BuGMakers"},{"title":"Categories","date":"2018-04-19T13:55:28.560Z","updated":"2018-04-17T23:19:52.693Z","comments":true,"path":"categories/index.html","permalink":"http://bruce.bugmakers.club/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2018-04-19T13:55:28.566Z","updated":"2018-04-17T23:19:52.693Z","comments":true,"path":"tags/index.html","permalink":"http://bruce.bugmakers.club/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"开始学习设计模式","slug":"boy-learning-design-pattern","date":"2018-04-19T23:13:56.000Z","updated":"2018-04-19T23:19:09.217Z","comments":true,"path":"2018/04/20/boy-learning-design-pattern/","link":"","permalink":"http://bruce.bugmakers.club/2018/04/20/boy-learning-design-pattern/","excerpt":"Bruce Ouyang 正在学习《设计模式Java版》 http://woquanke.com/books/gof/这本书个人学习的主要内容以及对应源码记录在https://github.com/BruceOuyang/boy-design-pattern目录下","text":"Bruce Ouyang 正在学习《设计模式Java版》 http://woquanke.com/books/gof/这本书个人学习的主要内容以及对应源码记录在https://github.com/BruceOuyang/boy-design-pattern目录下 初衷 系统的学习一遍设计模式 书的原链接https://gof.quanke.name 这个地址貌似正常情况下访问不了，习惯了markdown不想去看csdn上旧风格的文章（quanke大神的csdn博客上也有一份设计模式）,故在此仓库copy一份，方便大家访问和一起学习 最新更新，原作者提供了新域名访问地址： http://woquanke.com/books/gof/ ，国内访问无压力 融入一点自己的风格：我将刘伟大神的设计模式一书内容分散在代码的各个包里边，方便阅读 原文中有一些练习，就在这个仓库的源码中做掉 二十四种设计模式一览 以下文章持续更新中… 创建型 六个创建型模式 SEQ1 - 简单工厂模式 Simple Factory Pattern【学习难度：★★☆☆☆，使用频率：★★★☆☆】 SEQ2 - 工厂方法模式 Factory Method Pattern【学习难度：★★☆☆☆，使用频率：★★★★★】 SEQ3 - 抽象工厂模式 Abstract Factory Pattern【学习难度：★★★★☆，使用频率：★★★★★】 SEQ4 - 单例模式 Singleton Pattern【学习难度：★☆☆☆☆，使用频率：★★★★☆】 SEQ5 - 原型模式 Prototype Pattern【学习难度：★★★☆☆，使用频率：★★★☆☆】 SEQ6 - 建造者模式 Builder Pattern【学习难度：★★★★☆，使用频率：★★☆☆☆】 结构型 七个结构型模式 SEQ1 - 适配器模式 Adapter Pattern【学习难度：★★☆☆☆，使用频率：★★★★☆】 SEQ2 - 桥接模式 Bridge Pattern【学习难度：★★★☆☆，使用频率：★★★☆☆】 SEQ3 - 组合模式 Composite Pattern【学习难度：★★★☆☆，使用频率：★★★★☆】 SEQ4 - 装饰模式 Decorator Pattern【学习难度：★★★☆☆，使用频率：★★★☆☆】 SEQ5 - 外观模式 Facade Pattern【学习难度：★☆☆☆☆，使用频率：★★★★★】 SEQ6 - 享元模式 Flyweight Pattern【学习难度：★★★★☆，使用频率：★☆☆☆☆】 SEQ7 - 代理模式 Proxy Pattern【学习难度：★★★☆☆，使用频率：★★★★☆】 行为型 十一个行为型模式 SEQ01 - 职责链模式 Chain of Responsibility Pattern【学习难度：★★★☆☆，使用频率：★★☆☆☆】 SEQ02 - 命令模式 Command Pattern【学习难度：★★★☆☆，使用频率：★★★★☆】 SEQ03 - 解释器模式 Interpreter Pattern【学习难度：★★★★★，使用频率：★☆☆☆☆】 SEQ04 - 迭代器模式 Iterator Pattern【学习难度：★★★☆☆，使用频率：★★★★★】 SEQ05 - 中介者模式 Mediator Pattern【学习难度：★★★☆☆，使用频率：★★☆☆☆】 SEQ06 - 备忘录模式 Memento Pattern【学习难度：★★☆☆☆，使用频率：★★☆☆☆】 SEQ07 - 观察者模式 Observer Pattern【学习难度：★★★☆☆，使用频率：★★★★★】 SEQ08 - 状态模式 State Pattern【学习难度：★★★☆☆，使用频率：★★★☆☆】 SEQ09 - 策略模式 Strategy Pattern【学习难度：★☆☆☆☆，使用频率：★★★★☆】 SEQ10 - 模板方法模式 Template Method Pattern【学习难度：★★☆☆☆，使用频率：★★★☆☆】 SEQ11 - 访问者模式 Visitor Pattern【学习难度：★★★★☆，使用频率：★☆☆☆☆】 复习 设计模式趣味学习 设计模式于足球 设计模式综合应用实例 多人联机射击游戏 数据库同步服务","categories":[{"name":"设计模式","slug":"设计模式","permalink":"http://bruce.bugmakers.club/categories/设计模式/"}],"tags":[{"name":"设计模式","slug":"设计模式","permalink":"http://bruce.bugmakers.club/tags/设计模式/"},{"name":"design pattern","slug":"design-pattern","permalink":"http://bruce.bugmakers.club/tags/design-pattern/"}]},{"title":"推荐一款gif录制软件：LICEcap","slug":"LiceECap","date":"2018-04-19T15:30:19.000Z","updated":"2018-04-19T15:47:31.460Z","comments":true,"path":"2018/04/19/LiceECap/","link":"","permalink":"http://bruce.bugmakers.club/2018/04/19/LiceECap/","excerpt":"演示","text":"演示 下载地址 官网 https://www.cockos.com/licecap/ 我的github仓库 https://github.com/BruceOuyang/issuelist/blob/master/tools/licecap126-install.zip","categories":[{"name":"tools","slug":"tools","permalink":"http://bruce.bugmakers.club/categories/tools/"}],"tags":[{"name":"recommend","slug":"recommend","permalink":"http://bruce.bugmakers.club/tags/recommend/"},{"name":"gif","slug":"gif","permalink":"http://bruce.bugmakers.club/tags/gif/"}]},{"title":"免费博客 | Hexo搭建博客并部署到Github Pages服务","slug":"hexo-githubpages-blog","date":"2018-04-19T14:05:20.000Z","updated":"2018-04-19T15:44:52.880Z","comments":true,"path":"2018/04/19/hexo-githubpages-blog/","link":"","permalink":"http://bruce.bugmakers.club/2018/04/19/hexo-githubpages-blog/","excerpt":"本文实践的操作系统是windows 10，其他OS的可以当做参考用","text":"本文实践的操作系统是windows 10，其他OS的可以当做参考用 一、Hexo搭建博客1. 环境准备 下载并安装 nodejs 下载并安装 git 直接上官网看指引即可，如有疑问可以在评论中留言说明 2. Hexo初始化博客 在命令行窗口中执行下列命令 使用npm安装hexo 1npm install -g hexo-cli 初始化你的博客项目 执行命令123hexo init &lt;folder&gt;cd &lt;folder&gt;npm install &lt;folder&gt; 是你本地的文件目录，例如：F:\\bruce\\hexo\\bugmakerBlog，如果不写，则会在执行命令的当前目录初始化一个hexo博客项目 初始化的过程中会去github上下载一些东西，比如说默认的主题 landscape 之类的，需要等个几分钟 初始化完成后，你会得到一个这样的项目目录结构： _config.yml网站的主要配置文件，可以配置你网站的大部分信息。【配置参考说明】 简单的配置示例 key 说明 示例 title 网站的名字 BuG制造者联盟官方主页 author 网站的作者 Bruce language 语言设置 zh-CN package.json应用数据。 scaffolds目录模板目录，你新建一篇博客的时候会以这个目录中的模板文件来创建。 source目录资源目录，你新建的博客都存储在这里。在生成页面的时候，hexo会忽略掉命名为 _ 开头的文件或文件夹， _post 除外，会将 .md 和 .html 后缀的文件按主题生成页面，并复制到public目录下，其他后缀的文件则直接复制过去，不进行额外转换操作。 themes目录主题目录，你可以为自己的网站挑选好看的主题，然后在 _config.yml 文件中指定主题即可。 写一篇博客1hexo new [layout] &lt;title&gt; hexo new 会在 source目录 中创建一个以 &lt;title&gt; 命名的 .md 文件[layout] 是默认布局，在 scaffolds目录 下定义的，默认布局在 _config.yml 中指定，初始化的默认布局是 post&lt;title&gt; 是博客的标题，博客的标题可以在生成的 .md 文件中修改 示例1hexo new post My First Blog 生成页面并运行你的博客12hexo ghexo s -p 80 hexo g 是hexo生成页面指令 hexo generate 的缩写hexo s 是hexo启动本地服务的指令，默认端口是4000-p 80 是指定端口号80 默认访问地址 http://localhost:4000指定80端口访问地址 http://localhost 3. 切换博客主题在上一步中，我们看到的博客使用的主题是默认的 landscape 主题，hexo为我们提供了很多的主题可以选择，访问网站 https://hexo.io/themes/ 挑选自己喜欢的主题 将挑选好的主题 clone 到 theme目录 下，主题目录下也有一个 _config.yml 配置文件，这个配置文件即主题相关配置，具体根据主题的wiki上的说明来操作 在 _config.yml 中，设置 theme 属性的值为 theme目录 下的某一款主题即可，直接写目录下的文件夹名字 示例： clone主题到 theme目录 1git clone https://github.com/klugjo/hexo-theme-alpha-dust.git 修改根目录下的 _config.yml 配置文件，设置 theme 值 1theme : hexo-theme-alpha-dust 重新生成并启动本地服务 12hexo ghexo s -p 80 效果图 二、了解Github Pages服务GitHub Pages 网站：https://pages.github.com/ 1. 有什么用 Websites for you and your projects. 为你和你的项目提供一个网站Hosted directly from your GitHub repository. 直接托管存储在你的github仓库Just edit, push, and your changes are live. 只管去编辑提交代码到仓库，你的网站都会即时更新。 2. 怎么玩的 步骤其实很简单，在 Github Pages上都有如果你还没有github的账号，那需要先注册一个 第一步：在github上创建一个仓库，命名为 username.github.io username就是你的github用户名，注意不是登录账号，我仓库名字是 BuGMakerClub.github.io 第二步：将刚刚创建的仓库 clone 到本地，如 F:\\bruce\\bruce-private-github\\BuGMakerClub.github.io 12cd F:\\bruce\\bruce-private-github\\git clone https://github.com/BuGMakerClub/BuGMakerClub.github.io.git 第三步：在 clone 下来的项目中，创建一个 index.html，内容可以是 Hello World 12cd BuGMakerClub.github.ioecho &apos;Hello World&apos; &gt; index.html 第四步：提交代码，把刚创建的 index.html 文件 commit &amp; push 到你的 github仓库中 第五步：结束，你可以直接访问 https://username.github.io 访问你的网站了，我的网站地址是 https://BuGMakerClub.github.io 第六步：设置自己的个性化域名 如果你有自己的域名，可以在仓库的设置中绑定自己的个性化域名，然后在域名管理中心设置一个域名解析地址，这样就可以用个性化域名来访问github pages服务商的网页了 三、结合Hexo博客和Github Pages服务 参考：https://hexo.io/docs/deployment.html hexo的配置中，有一个 deploy 指令，可以将生成的博客网站部署到github仓库中，这样就形成两者的结合关系了。 具体操作如下 安装 hexo-deployer-git 插件1npm install hexo-deployer-git --save 修改根目录下的 _config.yml 配置文件 123deploy: type: git repo: https://github.com/BuGMakerClub/BuGMakerClub.github.io.git 执行 deploy 指令发布代码 1hexo d","categories":[{"name":"guide","slug":"guide","permalink":"http://bruce.bugmakers.club/categories/guide/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://bruce.bugmakers.club/tags/hexo/"},{"name":"github pages","slug":"github-pages","permalink":"http://bruce.bugmakers.club/tags/github-pages/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-04-18T21:05:20.000Z","updated":"2018-04-19T15:47:31.453Z","comments":true,"path":"2018/04/19/hello-world/","link":"","permalink":"http://bruce.bugmakers.club/2018/04/19/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"guide","slug":"guide","permalink":"http://bruce.bugmakers.club/categories/guide/"}],"tags":[{"name":"Hello World","slug":"Hello-World","permalink":"http://bruce.bugmakers.club/tags/Hello-World/"}]}]}